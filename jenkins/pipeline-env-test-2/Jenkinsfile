pipeline {
    agent any
    
    stages {
        stage('Stage_1') {
            steps {
                myTask()
            }
            post {
                always {
                    archiveArtifacts artifacts: '**', fingerprint: true, followSymlinks: false           
                }
            }
        }

        stage('Stages 2 and 3') {
            parallel {
                stage('Stage_2') {
                    agent {
                        dockerfile { filename 'jenkins/pipeline-env-test-2/Dockerfile'}
                        //dockerfile true
                        //docker { image 'ubuntu:24.04' }
                    }
                    steps {
                        myTask()
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: '**', fingerprint: true, followSymlinks: false           
                        }
                    }
                } // stage('Stage_2')


                stage('Stage_3') {
                    when {
                        expression {
                            return branchName == 'release' || branchName == 'feature';
                        }
                    }
                    steps {
                        myTask()
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: '**', fingerprint: true, followSymlinks: false           
                        }
                    }                    
                } // stage('Stage_3')

            } // parallel
        } // stage('Stages 2 and 3')
    }
    //post {
    //    always {
    //        archiveArtifacts artifacts: '**', fingerprint: true, followSymlinks: false
    //        //junit 'build/reports/**/*.xml'            
    //    }
    //}
}


def myTask()
{
    echo "${STAGE_NAME}"
    sh 'lsb_release -a'
    sh 'printenv'
    
    sh "echo ${STAGE_NAME} > Build_${BUILD_ID}_${STAGE_NAME}.log"
    //echo "'\n' > Build_${BUILD_ID}_${STAGE_NAME}.log"
    sh "echo \$(lsb_release -a) >> Build_${BUILD_ID}_${STAGE_NAME}.log"
    //echo "'\n' > Build_${BUILD_ID}_${STAGE_NAME}.log"
    sh 'printenv >> Build_${BUILD_ID}_${STAGE_NAME}.log'
}
