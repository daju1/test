pipeline {
    agent any
    
    stages {
        stage('Stage_1') {
            steps {
                myTask()
            }
            post {
                always {
                    archiveArtifacts artifacts: "Build_${BUILD_ID}_*.log", fingerprint: true, followSymlinks: false
                }
            }
        }

        stage('Stages 2 and 3') {
            parallel {
                stage('Stage_2') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile'
                            dir 'jenkins/pipeline-env-test-2'
                            // label 'my-defined-label' // Queued There are no nodes with the label ‘my-defined-label’
                            additionalBuildArgs '--build-arg version=1.0.2'
                            args '-v /tmp:/tmp'
                        }

                        //docker { image 'ubuntu:24.04' }
                    }

                    steps {
                        myTask()
                        //myDocker()
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: "Build_${BUILD_ID}_*.log", fingerprint: true, followSymlinks: false
                        }
                    }
                } // stage('Stage_2')


                stage('Stage_3') {
                    when {
                        expression {
                            return branchName == 'release' || branchName == 'feature';
                        }
                    }
                    steps {
                        myTask()
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: "Build_${BUILD_ID}_*.log", fingerprint: true, followSymlinks: false
                        }
                    }                    
                } // stage('Stage_3')

            } // parallel
        } // stage('Stages 2 and 3')
    }
    post {
        always {
            archiveArtifacts artifacts: 'pipeline.log', fingerprint: true, followSymlinks: false
        }
    }
}

def myDocker()
{
//node {
    checkout scm

    def dockerFile = 'jenkins/pipeline-env-test-2/Dockerfile'
    def imageName = "my-image:${env.BUILD_ID}"
    def dockerArgs = " --pull --rm ${pwd}"
    def imageArgs = "-f ${dockerFile} ${dockerArgs}"
    def customImage = docker.build(imageName, imageArgs)

    customImage.inside {
        //sh 'make test'
        myTask()
    }
//}   
}


def myTask()
{
    echo "${STAGE_NAME}"
    sh 'lsb_release -a'
    sh 'printenv'
    
    sh "echo ${STAGE_NAME} > Build_${BUILD_ID}_${STAGE_NAME}.log"
    sh "echo ${BUILD_TIMESTAMP} >> Build_${BUILD_ID}_${STAGE_NAME}.log"
    //echo "'\n' > Build_${BUILD_ID}_${STAGE_NAME}.log"
    sh "echo \$(lsb_release -a) >> Build_${BUILD_ID}_${STAGE_NAME}.log"
    //echo "'\n' > Build_${BUILD_ID}_${STAGE_NAME}.log"
    sh 'printenv >> Build_${BUILD_ID}_${STAGE_NAME}.log'
}
